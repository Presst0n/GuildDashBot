@model UserClaimsViewModel

<form method="post">
    <div class="card">
        <div class="card-header">
            <h2>Manage User Claims</h2>
        </div>
        <div class="card-body">
            @for (int i = 0; i < Model.Claims.Count; i++)
            {
                <div class="form-check m-1">
                    <input type="hidden" asp-for="@Model.Claims[i].ClaimType" />
                    <input asp-for="@Model.Claims[i].IsSelected" class="form-check-input" />
                    <label class="form-check-label" asp-for="@Model.Claims[i].IsSelected">
                        @Model.Claims[i].ClaimType
                    </label>
                </div>
            }
            <div asp-validation-summary="All" class="text-danger"></div>
        </div>
        <div class="card-footer">
            <input type="submit" value="Update" class="btn btn-primary"
                   style="width:auto" />
            <a asp-action="EditUser" asp-route-id="@Model.UserId"
               class="btn btn-primary" style="width:auto">Cancel</a>
        </div>
    </div>
</form>

<form asp-action="RemoveUserClaims" asp-route-id="@Model.UserId" method="post">

    <div class="card-footer">
        <span id="confirmDeleteSpan_@Model.UserId" style="display:none">
            <span>Are you sure you want to delete?</span>
            <button type="submit" class="btn btn-danger">Yes</button>
            <a href="#/" class="btn btn-primary" onclick="confirmDelete('@Model.UserId', false)">No</a>
        </span>
        <span id="deleteSpan_@Model.UserId">
            @if ((await authService.AuthorizeAsync(User, "DeleteRolePolicy")).Succeeded)
            {
                <a href="#/" class="btn btn-danger" onclick="confirmDelete('@Model.UserId', true)">Delete all</a>
            }
        </span>
    </div>
</form>

@section Scripts {
    <script src="~/js/site.js"></script>
}